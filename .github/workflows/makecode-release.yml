name: MakeCode Arcade Binary Release

on: 
  release:
    types:
      - created
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.x]

    steps:
      - uses: actions/checkout@v1
      - name: install node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install makecode
        run: |
          npm install -g pxt
          pxt target arcade
      - name: build js
        run: |
          pxt clean
          pxt install
          pxt build --cloud
      - name: upload js
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./built/debug/binary.js
          asset_name: arcade.js
          asset_content_type: application/octet-stream
      - name: build D51
        run: |
          pxt clean
          pxt install --hw samd51
          pxt build --hw samd51 --cloud
          cp ./built/binary.uf2 binary-d51.uf2
      - name: upload D51
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./built/binary.uf2
          asset_name: arcade-d51.uf2
          asset_content_type: application/octet-stream
      - name: build F4
        run: |
          pxt clean
          pxt install --hw stm32f401
          pxt build --hw stm32f401 --cloud
          cp ./built/binary.uf2 binary-f4.uf2
      - name: upload F4
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./built/binary.uf2
          asset_name: arcade-f4.uf2
          asset_content_type: application/octet-stream
      - name: build P0
        run: |
          pxt clean
          pxt install --hw rpi
          pxt build --hw rpi --cloud
          cp ./built/binary.uf2 binary-p0.uf2
      - name: upload P0
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./built/binary.uf2
          asset_name: arcade-p0.uf2
          asset_content_type: application/octet-stream
      - name: bundle all
        run: |
          cat binary-*.uf2 > built/arcade-all.uf2
      - name: upload bundled
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./built/arcade-all.uf2
          asset_name: arcade-all.uf2
          asset_content_type: application/octet-stream